---
- name: Create new user account
  ansible.builtin.uri:
    url: "https://{{ bmc_hostname }}{{ available_user_slots[0].json['@odata.id'] }}"
    method: PATCH
    user: "{{ bmc_username }}"
    password: "{{ bmc_password }}"
    validate_certs: "{{ bmc_validate_certs }}"
    force_basic_auth: "{{ bmc_force_basic_auth }}"
    timeout: "{{ bmc_timeout }}"
    body_format: json
    body:
      UserName: "{{ target_username }}"
      Password: "{{ target_password }}"
      Enabled: "{{ enable_user }}"
    status_code: [200, 202, 204]
  when: not target_user_exists and user_action == 'create'
  register: create_user_result
  tags: [create, users]

- name: Update existing user password
  ansible.builtin.uri:
    url: "https://{{ bmc_hostname }}{{ target_user_info.endpoint }}"
    method: PATCH
    user: "{{ bmc_username }}"
    password: "{{ bmc_password }}"
    validate_certs: "{{ bmc_validate_certs }}"
    force_basic_auth: "{{ bmc_force_basic_auth }}"
    timeout: "{{ bmc_timeout }}"
    body_format: json
    body:
      Password: "{{ target_password }}"
    status_code: [200, 202, 204]
  when: target_user_exists and user_action == 'update_password'
  register: update_password_result
  tags: [update_password, users]

- name: Delete existing user account
  ansible.builtin.uri:
    url: "https://{{ bmc_hostname }}{{ target_user_info.endpoint }}"
    method: PATCH
    user: "{{ bmc_username }}"
    password: "{{ bmc_password }}"
    validate_certs: "{{ bmc_validate_certs }}"
    force_basic_auth: "{{ bmc_force_basic_auth }}"
    timeout: "{{ bmc_timeout }}"
    body_format: json
    body:
      UserName: ""
    status_code: [200, 202, 204]
  when: target_user_exists and user_action == 'delete'
  register: delete_user_result
  tags: [delete, users]

- name: Set operation status
  ansible.builtin.set_fact:
    operation_status: "{{ 'Success' if ((create_user_result is defined and create_user_result is succeeded) or (update_password_result is defined and update_password_result is succeeded) or (delete_user_result is defined and delete_user_result is succeeded)) else 'Failed' }}"
  tags: [always]

- name: Include role management tasks
  ansible.builtin.include_tasks: role_management.yml
  when: 
    - user_action in ['create', 'update_password']
    - operation_status == 'Success'
  tags: [role_management]

- name: Include user verification tasks
  ansible.builtin.include_tasks: user_verification.yml
  when: operation_status == 'Success'
  tags: [verification] 