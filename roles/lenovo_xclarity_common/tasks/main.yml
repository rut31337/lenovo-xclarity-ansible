---
- name: Validate required BMC connection parameters
  ansible.builtin.fail:
    msg: "{{ item }} is required for BMC operations"
  when: vars[item] is not defined or vars[item] == ""
  loop:
    - bmc_hostname
    - bmc_username
    - bmc_password
  tags: [always, validation]

- name: Check BMC connectivity
  ansible.builtin.uri:
    url: "https://{{ bmc_hostname }}{{ redfish_base_url }}/"
    method: GET
    user: "{{ bmc_username }}"
    password: "{{ bmc_password }}"
    validate_certs: "{{ bmc_validate_certs }}"
    force_basic_auth: "{{ bmc_force_basic_auth }}"
    timeout: "{{ bmc_timeout }}"
    status_code: 200
  register: bmc_connectivity
  tags: [always, connectivity]

- name: Display BMC connection status
  ansible.builtin.debug:
    msg: "Successfully connected to BMC at {{ bmc_hostname }}"
  when: bmc_connectivity.status == 200
  tags: [always, connectivity]

- name: Display Redfish service information
  ansible.builtin.debug:
    msg: 
      - "Redfish Service Information:"
      - "Service Name: {{ bmc_connectivity.json.Name | default('Not specified') }}"
      - "Service ID: {{ bmc_connectivity.json.Id | default('Not specified') }}"
      - "Redfish Version: {{ bmc_connectivity.json.RedfishVersion | default('Not specified') }}"
      - "Service Version: {{ bmc_connectivity.json.ServiceVersion | default('Not specified') }}"
      - "UUID: {{ bmc_connectivity.json.UUID | default('Not specified') }}"
      - "Product: {{ bmc_connectivity.json.Product | default('Not specified') }}"
      - "Vendor: {{ bmc_connectivity.json.Vendor | default('Not specified') }}"
  when: bmc_connectivity.status == 200 and bmc_connectivity.json is defined
  tags: [always, connectivity, info] 